#!/usr/bin/env bash

if [ -x /usr/bin/tput ] && tput setaf 1 &> /dev/null; then
  tput sgr0; # reset colors
  bold=$(tput bold);
  reset=$(tput sgr0);
  # Solarized colors, taken from http://git.io/solarized-colors.
  black=$(tput setaf 0);
  blue=$(tput setaf 33);
  cyan=$(tput setaf 37);
  green=$(tput setaf 64);
  orange=$(tput setaf 166);
  purple=$(tput setaf 125);
  red=$(tput setaf 124);
  violet=$(tput setaf 61);
  white=$(tput setaf 15);
  yellow=$(tput setaf 136);
else
  bold='';
  reset="\e[00m";
  black="\e[1;30m";
  blue="\e[1;34m";
  cyan="\e[1;36m";
  green="\e[1;32m";
  orange="\e[1;33m";
  purple="\e[1;35m";
  red="\e[1;31m";
  violet="\e[1;35m";
  white="\e[1;37m";
  yellow="\e[1;33m";
fi;

prompt_git() {
  # Check if the current directory is in a Git repository.
  \git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return

  local s='';
  # Check for uncommitted changes in the index.
  ! $(\git diff --quiet --ignore-submodules --cached) && s+='+'
  # Check for unstaged changes.
  ! $(\git diff-files --quiet --ignore-submodules --) && s+='!'
  # Check for untracked files.
  [ -n "$(\git ls-files --others --exclude-standard)" ] && s+='?'
  # Check for stashed files.
  $(\git rev-parse --verify refs/stash &>/dev/null) && s+='$'
  [ -n "${s}" ] && s=" ${s}";

  # Get the short symbolic ref.
  # If HEAD isn’t a symbolic ref, get the short SHA for the latest commit.
  branch="$(\git symbolic-ref -q --short HEAD || git rev-parse -q --short HEAD)";

  echo -e "[\[$cyan\]${branch}\[$reset\]${s}]";
}

# Set prompt
PROMPT_DIRTRIM=3
set_bash_prompt() {
  [ $UID -eq 0 ] && PS1="\[$red\]\u" || PS1="\[$green\]\u" # Highlight the user name when logged in as root
  [ -n "${SSH_TTY}" ] && PS1+="@\h" # Add the hostname when connected via SSH
  PS1+="\[$reset\]:\[$blue\]\w\[$reset\]" # working directory shorten path
  PS1+="$(prompt_git)"; # Git repository details
  PS1+=" \$ "
}
PROMPT_COMMAND=set_bash_prompt

PS2="\[${yellow}\]→ \[${reset}\]";

# If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
#    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
#    ;;
#*)
#    ;;
#esac
